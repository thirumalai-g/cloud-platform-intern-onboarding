https://www.geeksforgeeks.org/mongodb-query-embedded-documents-using-mongo-shell/

findOne => method is used to find a single document from a collection

db.collection.findOne(query, projection)

projection => is used to include or exclude a field in a returned document

query=>(inclusion projection)

db.users.findOne({name:"Krishna"},{hobbies:1})

result=>
{
  _id: ObjectId('678742df484386806e578488'),
  hobbies: [ 'coding', 'cricket', 'good' ]
}

query=>(exclusion projection)

db.users.findOne({name:"Krishna"},{hobbies:0})


result =>

{
  _id: ObjectId('678742df484386806e578488'),
  name: 'Krishna',
  age: 30,
  address: { houseno: 273, street: 'Sannathi Street', pincode: 609403 }
}



findOneDelete=> method is used to find and delete an document

db.users.findOneAndDelete({name:"kalpak"})

{
  _id: ObjectId('6788d0a628b0dd5e8ee9082a'),
  name: 'kalpak',
  age: 29,
  debt: 2000,
  balance: 2000
}


findOneAndUpdate => method is used to find a method and update the method

query=>

appdb> db.users.findOneAndUpdate({name:"Krishna"},{$inc:{age:1}})

before=>

{
  _id: ObjectId('678742df484386806e578488'),
  name: 'Krishna',
  age: 30,
  address: { houseno: 273, street: 'Sannathi Street', pincode: 609403 },
  hobbies: [ 'coding', 'cricket', 'good' ]
}


after

db.users.find({name:"Krishna"})
[
  {
    _id: ObjectId('678742df484386806e578488'),
    name: 'Krishna',
    age: 31,
    address: { houseno: 273, street: 'Sannathi Street', pincode: 609403 },
    hobbies: [ 'coding', 'cricket', 'good' ]
  }
]

query a array in hobbies which contains "acting"

appdb> db.users.find({hobbies:{$all:["acting"]}})


[
  {
    _id: ObjectId('67972268603f864bb7c157f5'),
    name: 'surya',
    age: 46,
    hobbies: [ 'acting', 'readingbooks' ],
    addres: { street: 'south street', city: 'chennai', pincode: 609403 },
    balance: 2300,
    debt: 100,
    loan: true
  },
  {
    _id: ObjectId('67972268603f864bb7c157f6'),
    name: 'vijay',
    age: 50,
    hobbies: [ 'acting', 'Socialservice' ],
    balance: 10000,
    debt: 1200,
    loan: true
  }
]



query a nested documents by "." operator

appdb> db.users.find({"address.city":"mumbai"})
[
  {
    _id: ObjectId('6797194e603f864bb7c157f4'),
    name: 'sachin',
    age: 50,
    hobbies: [ 'cricket', 'investment', 'add' ],
    address: { street: 'North street', city: 'mumbai', pincode: 609405 },
    balance: 20000,
    debt: 9800,
    loan: true
  }
]